{"version":3,"sources":["../node_modules/bs58/index.js","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/providerHandlers.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/rpc/JrpcClient.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts","../../src/classes.ts","../../src/error-constants.ts","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../src/compute-budget.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/errors.ts","../../src/connection.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../src/utils.ts","../node_modules/@solana/web3.js/node_modules/tweetnacl/nacl-fast.js","../node_modules/base-x/src/index.js","../node_modules/borsh/lib/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../../src/Layout.ts","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../../src/index.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../../src/structs/coercions.ts"],"names":["basex","require","module","exports","createGetAccountsMiddleware","getAccounts","_ref","createAsyncMiddleware","request","response","next","method","Error","accounts","result","undefined","createRequestAccountsMiddleware","requestAccounts","_ref2","createGenericJRPCMiddleware","targetMethod","handler","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","mergeMiddleware","createInjectedProviderProxyMiddleware","provider","req","res","_next","getPhantomHandlers","injectedProvider","publicKey","bs58","encode","toBytes","ethErrors","rpc","methodNotSupported","message","decode","params","txn","Transaction","from","transaction","_req$params","txRes","signature","_req$params2","_req$params3","length","invalidParams","txns","map","msg","decodedMsg","PhantomInjectedProvider","constructor","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","_","Promise","resolve","solanaMiddleware","injectedProviderProxy","engine","JRPCEngine","push","providerFromEngine","updateProviderEngineProxy","lookupNetwork","update","chainId","BaseProvider","getTorusHandlers","data","toString","buf","Buffer","sendTx","_req$params4","_req$params5","messages","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","custom","code","connectedChainId","connectedHexChainId","isHexStrict","parseInt","WalletInitializationError","rpcConnectionError","emit","on","configure","setupProvider","createChainIdMiddleware","end","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getProviderHandlers","privKey","getProviderEngineProxy","transactionGenerator","serializedTx","decodedTx","populate","Message","keyPairGenerator","Keypair","fromSecretKey","keyPair","toBase58","partialSign","signedMsg","nacl","sign","detached","secretKey","_providerEngineProxy","serialize","sig","_req$params6","_req$params7","signedTransactions","tx","SolanaPrivateKeyProvider","privateKey","bind","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","name","displayName","blockExplorer","switchSolanaChain","switchChain","createChainSwitchMiddleware","_ref3","accountHandlers","updatePrivatekey","updateAccount","createAccountMiddleware","_ref4","providerFactory","SolanaWallet","requireAllSignatures","signedTransaction","transactions","args","EthereumRpcError","Number","isInteger","serialized","stack","fast_safe_stringify_1","stringifyReplacer","EthereumProviderError","isValidEthProviderCode","value","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","limitExceeded","parse","invalidRequest","methodNotFound","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","standard","toBuffer","arr","isBuffer","Uint8Array","buffer","byteOffset","byteLength","minimalisticAssert","assert","val","equal","l","r","Object","create","inherits_browserModule","ctor","superCtor","super_","prototype","enumerable","writable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","i","charCodeAt","htonl","w","zero2","word","zero8","enc","Array","isArray","slice","replace","p","c","endian","start","len","k","m","b","a","d","e","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","utils","BlockHash","this","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","x","y","z","maj32","p32","s","common","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","call","h","W","_1","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","_256","f","g","T1","T2","SHA224","_224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","_512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","_384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","key","Hash","inner","outer","_init","hmac","sha","ripemd","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","_checkNormalize","HEX","Logger","version","defineProperty","logLevel","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","hex","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","warn","logger","addSlice","array","arguments","arrayify","options","checkSafeUint53","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","v","isBytes","Struct","properties","assign","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Map","PublicKey","_bn","isPublicKeyData","decoded","BN","equals","eq","toJSON","toArrayLike","zeroPad","alloc","copy","fromPublicKey","seed","programId","seeds","TypeError","publicKeyBytes","is_on_curve","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","default","set","fields","naclLowLevel","lowlevel","gf","chk","den","den2","den4","den6","set25519","gf1","unpack25519","S","M","Z","pow2523","neq25519","I","pack25519","crypto_verify_32","property","BufferLayout","rustString","rsl","_decode","_encode","rslShim","offset","str","chars","span","decodeLength","size","elem","shift","encodeLength","rem_len","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","isAccountSigner","index","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","values","nonProgramIds","filter","numKeys","keyCount","shortvec","instruction","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","PACKET_DATA_SIZE","instructionBufferLength","signDataLayout","Layout","signData","byteArray","accountCount","dataSlice","DEFAULT_SIGNATURE","fill","TransactionInstruction","opts","pubkey","isSigner","isWritable","signatures","feePayer","nonceInfo","_message","_json","nonceInstruction","signers","add","items","item","compileMessage","accountMetas","accountMeta","includes","sort","pubkeySorting","localeCompare","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","splice","payerMeta","signedKeys","unsignedKeys","indexOf","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","_verifySignatures","_addSignature","addSignature","sigpair","verifySignatures","verify","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","status","sleep","ms","setTimeout","encodeData","type","allocLength","layout","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","SYSTEM_INSTRUCTION_LAYOUTS","freeze","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","base","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","authorizedPubkey","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","CHUNK_SIZE","Loader","Math","ceil","chunkSize","payer","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","bytesLength","bytesLengthPadding","_rpcEndpoint","all","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","ComputeBudgetProgram","global","self","__self__","F","fetch","DOMException","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","normalizeName","test","normalizeValue","iteratorFor","iterator","done","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","readArrayBufferAsText","formData","json","oldValue","hasOwnProperty","callback","thisArg","entries","methods","Request","input","credentials","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","split","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","redirectStatuses","redirect","RangeError","location","init","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","slot","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetEpochInfoResult","nullable","epoch","effectiveSlot","amount","postBalance","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","boolean","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","logs","rentEpoch","unitsConsumed","byIdentity","range","firstSlot","lastSlot","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","parsed","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","root","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","ConfirmationStatus","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","PerfSampleResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","feeCalculator","lamportsPerSignature","lastValidBlockHeight","numTransactions","numSlots","samplePeriodSecs","LogsResult","keypair","_keypair","skipValidation","TextEncoder","fromSeed","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPublicKey","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","publicKeyCreate","secp256k1","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","keccak_256","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","startsWith","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","authorizedWithdrawerPubkey","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","FALLBACK_ERROR_CODE","error_constants_1","FALLBACK_MESSAGE","FALLBACK_ERROR","getMessageFromCode","fallbackMessage","codeString","hasKey","isJsonRpcServerError","isValidCode","assignOriginalError","fallbackError","shouldIncludeStack","classes_1","_error","originalError","_a","_b","Float64Array","randombytes","_0","_9","gf0","_121665","D2","X","Y","ts64","vn","xi","yi","n","crypto_verify_16","crypto_core_salsa20","out","inp","o","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","car25519","floor","sel25519","q","par25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","inv25519","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","reduce","crypto_sign","sm","smlen","crypto_sign_open","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","tmp","mlen","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","min","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","allocUnsafe","pbegin","pend","b58","it1","it2","repeat","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","mod","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","encoding","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readUInt8","readUInt16LE","readUInt32LE","readBuffer","readU32","capitalizeFirstLetter","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","field","idx","deserializeField","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","max","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","finished","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints","checkUint8Array","uint8ArrayToBuffer","buffer_1","rv","nameWithProperty","Class","layout_","boundConstructor_","makeDestinationObject","ExternalLayout","GreedyCount","elementSpan","rem","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","isCount","getSpan","elo","Structure","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","fromArray","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","bits","bf","BitField","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","srcBuffer","write","CString","srcb","UTF8","maxSpan","Constant","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref$autoconnect","autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","max_reconnects","generate_request_id","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","window","WebSocket","onopen","onmessage","event","onclose","optionsOrCallback","cb","close","listener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","CommonClient","webSocketFactory","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","_login","mark","_callee","resp","wrap","_context","prev","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","notification","listeners","clearTimeout","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","isError","utils_1","errors_1","getEthJsonRpcError","arg","parseOpts","getEthProviderError","server","toFailures","run","StructError","failure","failures","cached","rest","path","isObject","print","shiftIterator","toFailure","struct","branch","refinement","coercer","valid","validator","ts","refiner","props","is","validate","tuples","define","Element","constant","description","never","isNaN","Key","Value","Elements","Never","Structs","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest"],"mappings":"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","file":"static/js/3.7b6f5056.chunk.js","sourcesContent":["var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n",null,null,null,null,null,null,null,null,null,null,null,null,"import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (this._message) {\n      if (JSON.stringify(this.toJSON()) !== JSON.stringify(this._json)) {\n        throw new Error(\n          'Transaction message mutated after being populated from Message',\n        );\n      }\n      return this._message;\n    }\n\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: number;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        BufferLayout.ns64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'RequestUnits' | 'RequestHeapFrame';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n\n  /** Additional fee to pay */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport crossFetch from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: typeof crossFetch,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : crossFetch;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware:\n    | ((url: string, options: any) => Promise<Response>)\n    | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url: string, options: any) => {\n      const modifiedFetchArgs = await new Promise<[string, any]>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) =>\n              resolve([modifiedUrl, modifiedOptions]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: (modifiedUrl: string, modifiedOptions: any) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: typeof crossFetch;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\nfunction createSubscriptionWarningMessage(id: number, label: string): string {\n  return (\n    'Ignored unsubscribe request because an active subscription ' +\n    `with id \\`${id}\\` for '${label}' events could not be found.`\n  );\n}\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; lastValidBlockHeight: number}> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; lastValidBlockHeight: number}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction({\n        recentBlockhash: originalTx.recentBlockhash,\n        nonceInfo: originalTx.nonceInfo,\n        feePayer: originalTx.feePayer,\n        signatures: [...originalTx.signatures],\n      });\n      transaction.instructions = transactionOrMessage.instructions;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._logsSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      console.warn(createSubscriptionWarningMessage(id, 'account change'));\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      console.warn(\n        createSubscriptionWarningMessage(id, 'program account change'),\n      );\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (this._logsSubscriptions[id]) {\n      const subInfo = this._logsSubscriptions[id];\n      delete this._logsSubscriptions[id];\n      await this._unsubscribe(subInfo, 'logsUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      console.warn(createSubscriptionWarningMessage(id, 'logs'));\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      console.warn(createSubscriptionWarningMessage(id, 'slot change'));\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      console.warn(createSubscriptionWarningMessage(id, 'slot update'));\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      console.warn(createSubscriptionWarningMessage(id, 'signature result'));\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      console.warn(createSubscriptionWarningMessage(id, 'root change'));\n    }\n  }\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n",null,"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './compute-budget';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './vote-program';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n"],"sourceRoot":""}